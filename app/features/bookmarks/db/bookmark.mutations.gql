mutation SaveBookmark($input: BookmarksInsertInput!) {
  bookmark: insertBookmarksOne(
    object: $input
    onConflict: {
      constraint: bookmarks_url_collection_id_key
      updateColumns: [
        articleData
        title
        description
        text
        html
        image
        embedData
      ]
    }
  ) {
    id
  }
}

mutation UpdateBookmark($id: String!, $input: BookmarksSetInput!) {
  bookmark: updateBookmarksByPk(_set: $input, pkColumns: { id: $id }) {
    id
  }
}

mutation DeleteBookmark($id: String!) {
  bookmark: deleteBookmarksByPk(id: $id) {
    id
    collectionId
  }
  deleteBookmarkEmbeddings(where: { bookmarkId: { _eq: $id } }) {
    affectedRows
  }
}

mutation SaveBookmarkEmbeddings(
  $bookmarkId: String!
  $inputs: BookmarkEmbeddingsInsertInput!
) {
  deleteBookmarkEmbeddings(where: { bookmarkId: { _eq: $bookmarkId } }) {
    affectedRows
  }
  insertBookmarkEmbeddings(
    objects: [$inputs]
    onConflict: {
      constraint: bookmark_embeddings_chunk_key
      updateColumns: [bookmarkId, embedding]
    }
  ) {
    affectedRows
  }
}
